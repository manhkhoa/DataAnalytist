<?php
/**
 * Implement Hook Menu
 */
function os_import_db_menu(){
	$items = array();
	
	$items['os-importdb'] = array(
		'type' => MENU_CALLBACK,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('os_import_db_form',TRUE),
		'access callback' => TRUE,
		'title' => 'Import Data'
	);
	
	return $items;
}

/**
 * Implements hook_form().
 */
function os_import_db_form($form, &$form_state) {
 
	// Select file
	$form['select_file'] = array( 
		'#type' => 'file', 
		'#title' => t('Select an excel file'),
		'#size' => 40, 
	);
	  
	$form['import_file'] = array(
		'#type' => 'submit', 
		'#value' => t('Import'), 
	);

 	return $form;
}

/**
 * Implements hook_form_validate().
 */
function os_import_db_form_validate($form, &$form_state) {
 	$validators = array('file_validate_extensions' => array('csv'));
	$destination = 'public://os_data/';
	
	// Create directory if not exist.
 	if(!file_exists($destination)) {
      mkdir($destination);
    }

	$file = file_save_upload('select_file', $validators, $destination, FILE_EXISTS_REPLACE);

	// Validate for upload file	
  	if (!$file) { 
		form_set_error('select_file', t('A file must be uploaded or selected from FTP updates.'));
 	} elseif(!($file->filemime != 'application/csv')) {
		form_set_error('select_file', t('The file must be of CSV type only.'));
  	}

	// Set files to form_state, to process when form is submitted
	$form_state['values']['upload_file'] = $file;
}

/**
 * Implements hook_form_submit().
 */
function os_import_db_form_submit($form, &$form_state) {
	
	$path = drupal_realpath($form_state['values']['upload_file']->uri);
	$file_name = $form_state['values']['upload_file']->filename;
	$file_name_tmp = strtoupper(substr($file_name, 0, 4));
	$time_tmp = strtoupper(substr($file_name, 4, 4));


  	# include parseCSV class.
	require_once(drupal_get_path('module', 'os_import_db').'/parsecsv.lib.php');

	// connect to mongodb
	$m = new MongoClient();
	// select a database
	$db = $m->adverse_drug_reactions;
	$drug = $db->drugs;
	$demo = $db->demographics;
	$react = $db->reactions;
	
	// # create new parseCSV object.
	$csv = new parseCSV();
	$csv->auto($path);
	$rows = $csv->data;

	if($file_name_tmp == 'DRUG'){ // Drug
		foreach ($rows as $row) {

			$drug_arr = array(
				"primaryid" => $row["primaryid"],
				"quarter" => $time_tmp,
				"caseid" => $row['caseid'],
				"drug_seq" => $row['drug_seq'],
				"role_cod" => $row['role_cod'],
				"drugname" => $row['drugname'],
				"val_vbm" => $row['val_vbm'],
				"route" => $row['route'],
				"dose_vbm" => $row['dose_vbm'],
				"cum_dose_chr" => $row['cum_dose_chr'],
				"cum_dose_unit" => $row['cum_dose_unit'],
				"dechal" => $row['dechal'],
				"rechal" => $row['rechal'],
				"lot_num" => $row['lot_num'],
				"exp_dt" => $row['exp_dt'],
				"nda_num" => $row['nda_num'],
				"dose_amt" => $row['dose_amt'],
				"dose_unit" => $row['dose_unit'],
				"dose_form" => $row['dose_form'],
				"dose_freq" => $row['dose_freq'],				
			);		

			try {
				// Check data exist
				// $find_query = array(
		  //           '$and' => array(
		  //               array(
		  //                   'primaryid' => $row["primaryid"],
		  //                   ),
		  //               array(
		  //                   'quarter' => $row["quarter"],
		  //                   ), 
		  //               array(
		  //                   'caseid' => $row['caseid'],
		  //                   ), 
		  //               array(
		  //                   'drug_seq' => $row["drug_seq"],
		  //                   ), 
		  //               )
		  //           );

				// $count_result = $drug->find($find_query)->count(); // Run find method

				// if($count_result == 0){
					$drug->insert($drug_arr); // insert data into drug collections					
				// }

				ob_flush(); // clear cache
			} catch (Exception $e){
				print_r($row); // print out error data
			}
		}

		drupal_set_message('Imported '.$file_name.' successful!', 'status');
	} else if($file_name_tmp == 'DEMO'){ // Demographics
		foreach ($rows as $row) {
			$demo_arr = array(
				"primaryid" => $row["primaryid"],
				"quarter" => $time_tmp,
				"caseid" => $row['caseid'],
				"caseversion" => $row['caseversion'],
				"i_f_code" => $row['i_f_code'],
				"event_dt" => $row['event_dt'],
				"mfr_dt" => $row['mfr_dt'],
				"init_fda_dt" => $row['init_fda_dt'],
				"fda_dt" => $row['fda_dt'],
				"rept_cod" => $row['rept_cod'],
				"mfr_num" => $row['mfr_num'],
				"mfr_sndr" => $row['mfr_sndr'],
				"age" => $row['age'],
				"age_cod" => $row['age_cod'],
				"gndr_cod" => $row['gndr_cod'],
				"e_sub" => $row['e_sub'],
				"wt" => $row['wt'],
				"wt_cod" => $row['wt_cod'],
				"rept_dt" => $row['rept_dt'],
				"to_mfr" => $row['to_mfr'],	
				"occp_cod" => $row['occp_cod'],				
				"reporter_country" => $row['reporter_country'],				
				"occr_country" => $row['occr_country'],
			);		

			try {
				// Check data exist
				// $find_query = array(
		  //           '$and' => array(
		  //               array(
		  //                   'primaryid' => $row["primaryid"],
		  //                   ),
		  //               array(
		  //                   'quarter' => $row["quarter"],
		  //                   ),
		  //               )
		  //           );

				// $count_result = $demo->find($find_query)->count(); // Run find method

				// if($count_result == 0){
					$demo->insert($demo_arr); // insert data into demographics collection
				// }

				ob_flush();
			} catch (Exception $e){
				print_r($row);
			}
		}

		drupal_set_message('Imported '.$file_name.' successful!', 'status');
	} else if($file_name_tmp == 'REAC'){ // Reactions
		foreach ($rows as $row) {
			$react_arr = array(
				"primaryid" => $row["primaryid"],
				"quarter" => $time_tmp,
				"caseid" => $row['caseid'],
				"pt" => $row['pt'],			
			);		

			try {

				// Check data exist
				// $find_query = array(
		  //           '$and' => array(
		  //               array(
		  //                   'primaryid' => $row["primaryid"],
		  //                   ),
		  //               array(
		  //                   'quarter' => $row["quarter"],
		  //                   ),
		  //               array(
		  //                   'pt' => $row["pt"],
		  //                   ),
		  //               )
		  //           );

				// $count_result = $react->find($find_query)->count(); // Run find method

				// if($count_result == 0){
					$react->insert($react_arr); // insert data in to reaction collection
				// }

				ob_flush();
			} catch (Exception $e){
				print_r($row);
			}
		}

		drupal_set_message('Imported '.$file_name.' successful!', 'status');
	} else { // Dont insert data
		drupal_set_message('Selected file has wrong name format. Please rename and try again', 'error');
	} //

	// Remove Imported file in server
	array_map('unlink', glob(drupal_realpath('public://os_data/*'))); // delete all files in folder
}

